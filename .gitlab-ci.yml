# SPDX-License-Identifier: FSFAP
# Copyright (C) 2019 John Hsu
# Copyright (C) 2019 Colin B. Macdonald
#
# Copying and distribution of this file, with or without modification,
# are permitted in any medium without royalty provided the copyright
# notice and this notice are preserved.  This file is offered as-is,
# without any warranty.
#
# This the CI configuration for Plom

# TODO list
# ---------
#   * use our Dockerfile instead of apt-get
#       - I think this is "dind"
#   * prepare an sql dump and some pngs so
#     we can fake the grading.
#   * test scripts 08 through 12

image: ubuntu:18.04

variables:
  KUBERNETES_VERSION: 1.11.7
  HELM_VERSION: 2.12.3

  DOCKER_DRIVER: overlay2

  ROLLOUT_RESOURCE_TYPE: deployment

# Need pip >= 19, which turns out to be nontrivial: cannot just call
# pip/pip3 after upgrading, hence `python3 -m pip` stuff below
before_script:
  - apt-get update
  - DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata curl
  - apt-get --no-install-recommends --yes install
    parallel zbar-tools cmake make imagemagick dvipng g++
    python3-passlib python3-seaborn python3-pandas python3-pyqt5
    python3-pyqt5.qtsql python3-pyqrcode python3-png python3-dev
    python3-pip python3-setuptools python3-wheel python3-toml
    python3-requests-toolbelt texlive-latex-extra
    iproute2 psmisc
  - pip3 install --upgrade pip
  - which pip3
  - python3 -m pip -V
  - python3 -m pip install --upgrade setuptools
  - python3 -m pip install pymupdf weasyprint imutils lapsolver peewee cheroot aiohttp

stages:
  - build
  - test

job buildPapers:
  stage: test
  script:
    # First build sources pdfs
    - pushd testTemplates
    - pdflatex latexTemplate.tex
    - pdflatex --interaction=batchmode latexTemplate.tex
    - pdflatex --interaction=batchmode latexTemplate.tex
    - pdflatex latexTemplatev2.tex
    - pdflatex --interaction=batchmode latexTemplatev2.tex
    - pdflatex --interaction=batchmode latexTemplatev2.tex
    - cp latexTemplate.pdf ../build/sourceVersions/version1.pdf
    - cp latexTemplatev2.pdf ../build/sourceVersions/version2.pdf
    - popd
    # Now build tests
    - pushd build
    - curl https://www.math.ubc.ca/~cbm/tmp/resources_a8e9b763.tar.gz | tar -zx
    - mv resources cannedResources
    - ./001_startHere.py
    - cp cannedResources/verifiedSpec.toml testSpec.toml
    - ./002_verifySpec.py
    - ls ../resources/verifiedSpec.toml
    # TODO: override the private seed
    - sed ../resources/verifiedSpec.toml -i -e "s/privateSeed = .*/privateSeed = \"8253996856355501\"/"
    - diff -u ../resources/verifiedSpec.toml cannedResources/verifiedSpec.toml
    - ./003_buildPlomDB.py
    - ./004_buildPDFs.py
    - ./004a_buildPDFs_no_names.py
    # TODO: compare to downloaded canned versions?
    # TODO: https://github.com/vslavik/diff-pdf, not in Ubuntu repos?
    - A=`ls examsToPrint/ | wc -l`   # How many files?
    - bash -c "[[ $A == 20 ]]"       # should be 20
    - popd

job serverStarts:
  stage: test
  script:
    - pushd scanAndUpload
    - python3 011_startHere.py
    # supposed to fail:
    - if (python3 012_scansToImages.py); then false; else true; fi
    - popd
    # This not ideal, should clone https://gitlab.math.ubc.ca/cbm/plommintestdata.git
    - curl https://www.math.ubc.ca/~cbm/tmp/testThis.pdf > scanAndUpload/scannedExams/foo.pdf
    - curl https://www.math.ubc.ca/~cbm/tmp/resources_a8e9b763.tar.gz | tar -zx
    - ls resources
    - ls scanAndUpload/scannedExams
    - pushd scanAndUpload
    - python3 011_startHere.py
    - python3 012_scansToImages.py
    - popd
    - pushd newServer
    - ip addr
    - python3 newServer.py &
    - sleep 1
    - echo "Server should be in background"
    - jobs -l
    - echo "We should be able to connect to it"
    - curl -k https://localhost:41984/Version
    - popd
    - pushd finishing
    # TODO: fix this up
    # echo "The 07 script should fail as we did not grade and ID"
    # if (python3 07_check_completed.py); then false; else true; fi
    - popd
    - pushd clients
    - ./autoMarker.py -s localhost -p 41984 -u anne -w enna
    - popd
    - echo "Now take down the server"
    # https://gitlab.com/gitlab-org/gitlab-runner/issues/2880
    - jobs -l
    - kill %1
    - sleep 2
    - echo "Should be no jobs and this should succeed"
    - jobs -l

job backgroundTest:
  before_script:
    - echo "Overriding before_script"
  stage: test
  script:
    - sleep 60 &
    - jobs -l
    - jobs -p
    - echo "Sleep job has started"
    - sleep 2
    - jobs -l
    - jobs -p
    - echo "We will kill it"
    - kill -9 %1
    - echo "Should be no jobs and this should succeed"
    - jobs -p

job someUnitTests:
  stage: test
  script:
    - pushd finishing
    - ./run_unit_tests.sh
    - popd
    - pushd resources
    - ./run_unit_tests.sh
    - popd
